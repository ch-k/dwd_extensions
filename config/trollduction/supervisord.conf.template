; pytroll supervisor config file.
;
; For more information on the config file, please see:
; http://supervisord.org/configuration.html
;
; Notes:
;  - Shell expansion ("~" or "%HOME") is not supported.  Environment
;    variables can be expanded using this syntax: "%(ENV_HOME)s".
;  - Comments must have a leading space: "a=b ;comment" not "a=b;comment".

[unix_http_server]
;file=/var/run/pytroll-supervisord.sock   ; (the path to the socket file)
file=/tmp/pytroll-supervisord.sock   ; (the path to the socket file)
;chmod=0700                 ; socket file mode (default 0700)
;chown=nobody:nogroup       ; socket file uid:gid owner
;username=user              ; (default is no username (open server))
;password=123               ; (default is no password (open server))

;[inet_http_server]         ; inet (TCP) server disabled by default
;port=127.0.0.1:9001        ; (ip_address:port specifier, *:port for all iface)
;username=user              ; (default is no username (open server))
;password=123               ; (default is no password (open server))

[supervisord]
logfile=%LOGDIR%/supervisord.log ; (main log file;default %CWD/supervisord.log)
logfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10           ; (num of main logfile rotation backups;default 10)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
;pidfile=/var/run/pytroll-supervisord.pid ; (supervisord pidfile;default supervisord.pid)
pidfile=/tmp/pytroll-supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false               ; (start in foreground if true;default false)
minfds=1024                  ; (min. avail startup file descriptors;default 1024)
minprocs=200                 ; (min. avail process descriptors;default 200)
;umask=022                   ; (process file creation umask;default 022)
;user=chrism                 ; (default is current user, required if root)
;identifier=supervisor       ; (supervisord identifier, default is 'supervisor')
;directory=/tmp              ; (default is not to cd during start)
;nocleanup=true              ; (don't clean up tempfiles at start;default false)
;childlogdir=/tmp            ; ('AUTO' child log dir, default %TEMP)
;strip_ansi=false            ; (strip ansi escape codes in logs; def. false)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
;serverurl=unix:///var/run/pytroll-supervisord.sock ; use a unix:// URL  for a unix socket
serverurl=unix:///tmp/pytroll-supervisord.sock ; use a unix:// URL  for a unix socket
;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket
;username=chris              ; should be same as http_username if set
;password=123                ; should be same as http_password if set
;prompt=mysupervisor         ; cmd line prompt (default "supervisor")
;history_file=~/.sc_history  ; use readline history if available

; The below sample program section shows all possible program subsection values,
; create one or more 'real' program: sections to be able to control them under
; supervisor.

[program:nameserver]
environment = PPP_CONFIG_DIR="%CONFIGDIR%"
command=%PYTHONBIN% %NAMESERVERPATH% -v     
;process_name=%(program_name)s ; process_name expr (default %(program_name)s)
priority=1                  
startsecs=3
stdout_logfile=%LOGDIR%/%(program_name)s-stdout.log
stderr_logfile=%LOGDIR%/%(program_name)s-stderr.log
                 

[program:trollstalker]
environment = PPP_CONFIG_DIR="%CONFIGDIR%"
command=%PYTHONBIN% %TROLLSTALKERPATH% -c %MASTERCONFIGPATH% -C %MASTERCONFIGSECTION%    
;process_name=%(program_name)s ; process_name expr (default %(program_name)s)
priority=2                  
startsecs=3
stdout_logfile=%LOGDIR%/%(program_name)s-stdout.log
stderr_logfile=%LOGDIR%/%(program_name)s-stderr.log

[program:l2processor]
environment = PPP_CONFIG_DIR="%CONFIGDIR%"
command=%PYTHONBIN% %L2PROCESSORPATH% -c %MASTERCONFIGPATH% -C %MASTERCONFIGSECTION%    
;process_name=%(program_name)s ; process_name expr (default %(program_name)s)
priority=3                  
startsecs=3
stdout_logfile=%LOGDIR%/%(program_name)s-stdout.log
stderr_logfile=%LOGDIR%/%(program_name)s-stderr.log

[program:postprocessor]
environment = PPP_CONFIG_DIR="%CONFIGDIR%"
command=%PYTHONBIN% %POSTPROCESSORPATH% -c %MASTERCONFIGPATH% -C %MASTERCONFIGSECTION%    
;process_name=%(program_name)s ; process_name expr (default %(program_name)s)
priority=4                  
startsecs=3            
stdout_logfile=%LOGDIR%/%(program_name)s-stdout.log
stderr_logfile=%LOGDIR%/%(program_name)s-stderr.log

; The below sample eventlistener section shows all possible
; eventlistener subsection values, create one or more 'real'
; eventlistener: sections to be able to handle event notifications
; sent by supervisor.

[group:trollduction]
programs=nameserver,trollstalker,l2processor,postprocessor  ; each refers to 'x' in [program:x] definitions
;priority=999                  ; the relative start priority (default 999)

; The [include] section can just contain the "files" setting.  This
; setting can list multiple files (separated by whitespace or
; newlines).  It can also contain wildcards.  The filenames are
; interpreted as relative to this file.  Included files *cannot*
; include files themselves.

#!/bin/bash
#
# /etc/init.d/trollductiond
# Handles starting and stopping supervisord.
#
# Tested on SLES 11 SP3
# Author: Gary Monson gary.monson@gmail.com
# Author: Christian Kliche chk@ebp.de
#
### BEGIN INIT INFO
# Provides:          trollductiond
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Description:       Provides trollduction supervisord service
### END INIT INFO

DAEMON=%PYTHONBINDIR%supervisord
if [ -f "%PYTHONBINDIR%supervisord" ]; then
    DAEMON=%PYTHONBINDIR%supervisord
else
    DAEMON=supervisord
fi

# BASE=`basename $DAEMON`
PIDFILE=/tmp/trollduction-supervisord.pid
CONFIGFILE=%CONFIGDIR%/trollduction/supervisord.conf
LOGFILE=%LOGDIR%/supervisord.log
USER=$(whoami)


# Exit if the package is not installed
command -v "$DAEMON" >/dev/null 2>&1 || { echo>&2 "$DAEMON does not exist. Aborting..."; exit 1;}


start() {
    echo "Starting trollduction supervisord: "
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        echo supervisord already running: $PID
        exit 2;
    else
        mkdir -p `dirname $LOGFILE`
        $DAEMON --user=$USER --pidfile $PIDFILE --configuration $CONFIGFILE --logfile $LOGFILE
        RETVAL=$?
        return $RETVAL
    fi
}

stop() {
    echo "Shutting down trollduction supervisord:"
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        ps -p $PID >/dev/null 2>&1
        if [ "$?" = 0 ]; then
            echo "trollduction supervisord running, stopping.."
            kill -SIGTERM $PID
            COUNTER=0
            while [  $COUNTER -lt 10 ]; do
                ps -p $PID >/dev/null 2>&1
                if [ "$?" != 0 ]; then
                    return 0
                fi
                let COUNTER=COUNTER+1
                sleep 5
                echo "waiting another 5 seconds"
            done
            echo "could not stop trollduction supervisord"
            exit 2
        else
            echo "pidfile exists ($PIDFILE), but trollduction supervisord not running"
            exit 2
        fi
        rm $PIDFILE
    else
        echo "trollduction supervisord not running"
        exit 1
    fi
    #killproc -p $PIDFILE supervisord
    return 0
}

status() {
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        ps -p $PID >/dev/null 2>&1
        if [ "$?" = 0 ]; then
            echo "trollduction supervisord running"
            exit 0
        else
            echo "pidfile exists ($PID), but trollduction supervisord not running"
            exit 2
        fi
    else
        echo "trollduction supervisord not running"
        exit 1
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
        ;;
    status)
        status
        ;;
    *)
        echo "Usage:  {start|stop|restart|status}"
        exit 1
        ;;
esac

exit $?
 
